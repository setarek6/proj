#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>
#include <string.h>
#include "functions_phase-1.c"
int g;
int main()
{
   for(int i = 0; i <20; i++){
      for(int j = 0; j < 20; j++){
         world[i][j] = '.';
      }
   }
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
printf("Hello player,welcome to the game!\nBefore we start choose how you want to play.\nPress 1 if you want to resume your previous game.\nPress 2 if you want to start a new game with your own map.\nPress 3 if you want to start a new game with a random map.\nEnter here:");
scanf("%d",g);
if(g==1){
    ResumeTheGame()
    printf("Your kind is %c.You already know how to play so let's start!\nPress 5 if you are ready:",User_Animal)
	scanf("%d", &user_move);
	if(user_move != 5){
		printf("see you later");
		exit(0);
	}
	system("cls");
}
else if(g==2){ NewGame()}
else{ NewRandomGame()}
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  
	int sw = 1;

   while(1){
   	print();
      for(int i = 0; i < user_animals_index; i++){
         for(int k = 0; k < user_animals[i].movement_number; k++){
            do{
            if(!sw)printf("\a");
            printf("choose your momve : ");
            scanf("%d", &user_move);
            sw = single_move(user_move + '0', &user_animals[i].row, &user_animals[i].column);
            }while(!sw);
            system("cls");
            print();
         }
      }
      Sleep(2000);
      system("cls");
      for(int i = 0; i < program_animals_index; i++){
         CreateWorldCopy();
         counter = 0;
         lastmojaveindex = 0;
         currentmojaverindex = 0;
         FindWay(program_animals[i].row, program_animals[i].column, &program_animals[i].row, &program_animals[i].column, 'f');
         CreateWorldCopy();
         integer_world_copy[hx][hy] = 1;
         counter = 0;
         lastmojaveindex = 0;
         currentmojaverindex = 0;
         FindWay(hx, hy, &program_animals[i].row, &program_animals[i].column, 'g');

         for(int i = 0; i < side; i++){
        for(int j = 0; j < side; j++){
            world3[i][j] = 0;
            }
        }

       /* print();

        printf("in avaleshe \n");
    for(int k = 0; k < side; k++){
        for(int  t = 0; t < side; t ++){
            printf("%d ", world3[k][t]);
        }
        printf("\n");
    }
         CreateWorld3(program_animals[i].row, program_animals[i].column);


         printf("for animal in %d %d\n", program_animals[i].row, program_animals[i].column);
         for(int i = 0 ; i < side; i++){
       for(int j = 0; j < side; j++){
          printf("%d ", integer_world_copy[i][j]);
       }
       printf("\n");
    }

    printf("-------------------------------------\n");*/
        CreateWorld3(program_animals[i].row, program_animals[i].column);
       /* for(int i = 0 ; i < side; i++){
       for(int j = 0; j < side; j++){
          printf("%d ", world3[i][j]);
       }
       printf("\n");
      }
    Sleep(10000);*/
         for(int k = 0; k < program_animals[i].movement_number; k++){
            int move_result = Move(&program_animals[i].row, &program_animals[i].column);
            print();
            Sleep(2000);
            system("cls");
         }
      }
   }
   return 0;
}



void SaveTheGame(){
FILE *savedgame;
int i,j;
fopen("savedgame.txt","w");
for(i = 0; i < side; i++){
    for(j = 0; j < side; j++){
        if(world[i][j]=='H' || world[i][j]=='#'){
        fprintf(savedgame,"%c ", world[i][j]);
        fprintf(savedgame,"%d %d ",i,j);
        }
    }
    
}
fprintf(savedgame,"\n");
for(i=0;i<program_animals_index;i++){
    fprintf(savedgame,"%c ",world[program_animal[i].row],program_animal[i].column]);
    fprintf(savedgame,"%d %d %d %d %d %d %d",program_animal[i].row,program_animal[i].column,program_animal[i].energy,program_animals[i].single_move_energy,
            program_animals[i].movement_number, program_animals[i].reproduction_energy
            , program_animals[i].attack_energy, program_animals[i].defense_energy);
    fprintf(savedgame,"\n");
}
fclose(savedgame);
for(int i = 0; i < program_animals_index; i++){
      if(world[program_animals[i].row][program_animals[i].column] == User_Animal){
         TransferToUserAnimals(i);
         i--;
      }
   }

printf("You already know how to play so let's get started!\nYour type is %c.\nIf you are ready press number 5 : ", User_Animal);
	scanf("%d", &user_move);
	if(user_move != 5){
		printf("see you later");
		exit(0);
	}

	system("cls");
}
//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
void ResumeTheGame(){
char c;
int i=0,row,column;
savedgame=fopen("savedgame.txt","r");
do{
    fscanf(savedgame,"%c ", &c);
    fscanf(savedgame,"%d %d ",&row,&column);
    world[row][column]=c;
     
}while(c=='H'||c=='#');
while(!feof(savedgame)){
    fscanf(savedgame,"%c ", &c);
    fscanf(savedgame,"%d %d %d %d %d %d %d",&program_animal[i].row,&program_animal[i].column,&program_animal[i].energy,&program_animals[i].single_move_energy,
    &program_animals[i].movement_number, &program_animals[i].reproduction_energy
    ,&program_animals[i].attack_energy, &program_animals[i].defense_energy);
    world[program_animal[i].row][program_animal[i].column]=c;
    i++;
}
fclose(savedgame);
}
int random(int min, int max){
int a=max-min;
int b=(rand())%a;
return(min+b);
}
//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
void NewRandomGame(){
    /* #########################################   GEREFTAN DATA AZ RANDOM MAP  ##########################################*/
   char User_Animal;
   int seprator_counter = 0, index_for_add_genetic = 0, user_move = 0; // user move harkat karbaro migire
   FILE * randomgame = fopen("randomgame.txt", "r");
   fscanf(randomgame, "%d", &side);
   char temp[100];

   while(fscanf(randomgame, "%s", temp) != EOF){
      if(temp[0] == 'F'){
         int food_energy, row, col;
         fscanf(randomgame, "%d", &food_energy);
         fscanf(randomgame, "%s", temp);
         row = find_integer(temp);
         col = find_integer(temp);
         energys[row][col] += food_energy;
      }

      else if(temp[0] == '#'){
         int number, row, col;
         fscanf(randomgame, "%d", &number);
         fscanf(randomgame, "%s", temp);

         for(int k = 0; k < number; k++){
            row = find_integer(temp);
            col = find_integer(temp);
            world[row][col] = '#';
         }
      }

      else if(temp[0] == 'H'){
         int number, row, col;
         fscanf(randomgame, "%d", &number);
         fscanf(randomgame, "%s", temp);

         for(int k = 0; k < number; k++){
            row = find_integer(temp);
            col = find_integer(temp);
            world[row][col] = 'H';
         }
      }

      else if(is_equal_str(temp, "===")){
         seprator_counter++;
      }

      else{
         int number, row, col;

         if(seprator_counter == 4){
            char animal = temp[0];
            int current_energy;
            fscanf(randomgame, "%d", &program_animals[index_for_add_genetic].energy);
            fscanf(randomgame, "%d$%d$%d$%d$%d", &program_animals[index_for_add_genetic].single_move_energy,
            &program_animals[index_for_add_genetic].movement_number, &program_animals[index_for_add_genetic].reproduction_energy
            , &program_animals[index_for_add_genetic].attack_energy, &program_animals[index_for_add_genetic].defense_energy);

            index_for_add_genetic++;

            for( ; world[program_animals[index_for_add_genetic].row][program_animals[index_for_add_genetic].column] == animal; index_for_add_genetic++){
               program_animals[index_for_add_genetic].energy = program_animals[index_for_add_genetic - 1].energy;
               program_animals[index_for_add_genetic].movement_number = program_animals[index_for_add_genetic - 1].movement_number;
               program_animals[index_for_add_genetic].reproduction_energy = program_animals[index_for_add_genetic - 1].reproduction_energy;
               program_animals[index_for_add_genetic].single_move_energy = program_animals[index_for_add_genetic - 1].single_move_energy;
               program_animals[index_for_add_genetic].attack_energy = program_animals[index_for_add_genetic - 1].attack_energy;
               program_animals[index_for_add_genetic].defense_energy = program_animals[index_for_add_genetic - 1].defense_energy;
            }
         }

         else if(seprator_counter == 3){
               User_Animal = temp[0];
         }

         else{
            char animal = temp[0];
            fscanf(randomgame, "%d", &number);
            fscanf(randomgame, "%s", temp);
            for(int i = 0; i < number; i++){
               row = find_integer(temp);
               col = find_integer(temp);
               world[row][col] = animal;
               program_animals[program_animals_index].row = row;
               program_animals[program_animals_index].column = col;
               program_animals_index++;

            }
         }

      }
   }
   fclose(randomgame);


/* #########################################   JODA KARDAN GONE HAYE KARBAR   ##########################################*/

   for(int i = 0; i < program_animals_index; i++){
      if(world[program_animals[i].row][program_animals[i].column] == User_Animal){
         TransferToUserAnimals(i);
         i--;
      }
   }

// /* ##################################################   SHORO BAZI   ##################################################*/

   printf("Hello player\nWelcome to our game\nHere's how the game works.\nYou can choose your move based on this\n1 2 3\n\
4 5 6\n7 8 9\nConsider 5 as yout current location and choose your move.\nyour type is %c.\nif you are ready press number 5 : ", User_Animal);

	scanf("%d", &user_move);
	if(user_move != 5){
		printf("see you later");
		exit(0);
	}

	system("cls");
}

//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
void NewGame(){

    /* #########################################   GEREFTAN DATA AZ MAP  ##########################################*/
   char User_Animal;
   int seprator_counter = 0, index_for_add_genetic = 0, user_move = 0; // user move harkat karbaro migire
   FILE * inputs = fopen("map-phase1.txt", "r");
   fscanf(inputs, "%d", &side);
   char temp[100];

   while(fscanf(inputs, "%s", temp) != EOF){
      if(temp[0] == 'F'){
         int food_energy, row, col;
         fscanf(inputs, "%d", &food_energy);
         fscanf(inputs, "%s", temp);
         row = find_integer(temp);
         col = find_integer(temp);
         energys[row][col] += food_energy;
      }

      else if(temp[0] == '#'){
         int number, row, col;
         fscanf(inputs, "%d", &number);
         fscanf(inputs, "%s", temp);

         for(int k = 0; k < number; k++){
            row = find_integer(temp);
            col = find_integer(temp);
            world[row][col] = '#';
         }
      }

      else if(temp[0] == 'H'){
         int number, row, col;
         fscanf(inputs, "%d", &number);
         fscanf(inputs, "%s", temp);

         for(int k = 0; k < number; k++){
            row = find_integer(temp);
            col = find_integer(temp);
            world[row][col] = 'H';
         }
      }

      else if(is_equal_str(temp, "===")){
         seprator_counter++;
      }

      else{
         int number, row, col;

         if(seprator_counter == 4){
            char animal = temp[0];
            int current_energy;
            fscanf(inputs, "%d", &program_animals[index_for_add_genetic].energy);
            fscanf(inputs, "%d$%d$%d$%d$%d", &program_animals[index_for_add_genetic].single_move_energy,
            &program_animals[index_for_add_genetic].movement_number, &program_animals[index_for_add_genetic].reproduction_energy
            , &program_animals[index_for_add_genetic].attack_energy, &program_animals[index_for_add_genetic].defense_energy);

            index_for_add_genetic++;

            for( ; world[program_animals[index_for_add_genetic].row][program_animals[index_for_add_genetic].column] == animal; index_for_add_genetic++){
               program_animals[index_for_add_genetic].energy = program_animals[index_for_add_genetic - 1].energy;
               program_animals[index_for_add_genetic].movement_number = program_animals[index_for_add_genetic - 1].movement_number;
               program_animals[index_for_add_genetic].reproduction_energy = program_animals[index_for_add_genetic - 1].reproduction_energy;
               program_animals[index_for_add_genetic].single_move_energy = program_animals[index_for_add_genetic - 1].single_move_energy;
               program_animals[index_for_add_genetic].attack_energy = program_animals[index_for_add_genetic - 1].attack_energy;
               program_animals[index_for_add_genetic].defense_energy = program_animals[index_for_add_genetic - 1].defense_energy;
            }
         }

         else if(seprator_counter == 3){
               User_Animal = temp[0];
         }

         else{
            char animal = temp[0];
            fscanf(inputs, "%d", &number);
            fscanf(inputs, "%s", temp);
            for(int i = 0; i < number; i++){
               row = find_integer(temp);
               col = find_integer(temp);
               world[row][col] = animal;
               program_animals[program_animals_index].row = row;
               program_animals[program_animals_index].column = col;
               program_animals_index++;

            }
         }

      }
   }
   fclose(inputs);



/* #########################################   JODA KARDAN GONE HAYE KARBAR   ##########################################*/

   for(int i = 0; i < program_animals_index; i++){
      if(world[program_animals[i].row][program_animals[i].column] == User_Animal){
         TransferToUserAnimals(i);
         i--;
      }
   }

// /* ##################################################   SHORO BAZI   ##################################################*/

   printf("Hello player\nWelcome to our game\nHere's how the game works.\nYou can choose your move based on this\n1 2 3\n\
4 5 6\n7 8 9\nConsider 5 as yout current location and choose your move.\nyour type is %c.\nif you are ready press number 5 : ", User_Animal);

	scanf("%d", &user_move);
	if(user_move != 5){
		printf("see you later");
		exit(0);
	}

	system("cls");
}
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   RANDOM MAP
int random(int min, int max){
int a=max-min;
int b=(rand())%a;
return(min+b);
}

char Rworld[20][20];
char ALPH="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
//hame Rworld ro mizarim '.' 
int isFree(int x,int y){
   if (Rworld[x][y]=='.') return(1);
   else return(0);
}
void RandomGame(){
int i,x,y,j,animal_counter,k,sw;
    FILE *randomgame = fopen("randomgame.txt","w");
    //srand(time (0));
    int side = random(0,20);
    //char animals[10];
    fprintf (randomgame,"%d\n",side);
    fprintf (randomgame,"# ");
    int deadends = random(0,side*side/5);
    fprintf (randomgame,"%d ", deadends);
    for (i=0 ; i < deadends ; i++){
      do{
      x=random(0,side);
      y=random(0,side);
      }while(isFree(x,y)==0); 
        fprintf (randomgame,"(%d,%d)", x, y);
        Rworld[x][y]='#';
    }
    fprintf (randomgame,"\n");
    fprintf (randomgame,"H ");
    int heavens= random(0,side*side/5);
    fprintf (randomgame,"%d ",heavens);
    for ( i=0; i <heavens; i++){
      do{
      x=random(0,side);
      y=random(0,side);
      }while(isFree(x,y)==0); 
        fprintf (randomgame,"(%d,%d)", x,y);
        Rworld[x][y]='H';
    }
    fprintf (randomgame,"\n");
    fprintf (randomgame,"===\n");
    int foods = ///baze?
    for (i=0;i<foods;i++){
      fprintf (randomgame,"F ");
      fprintf (randomgame,"%d ",rand()%500+0);//baze?
      do{
      x=random(0,side);
      y=random(0,side);
      }while(isFree(x,y)==0); 
        fprintf (randomgame,"(%d,%d)\n",x,y));
        // food ham age bashe nemishe heyvoon bere?
        //Rworld[x][y]='F';
   }
    fprintf(randomgame,"===\n");
   int animals= random(1,26);
   char animals[26];
   int user_animal_number=random(0,animals);
   for(animal_counter=0;animal_counter<animals;animal_counter++){
   sw=0;
   animals[animal_counter]=ALPH[random(0,26)];
   for(k=0;animals[k];k++){
      if(animals[k]==animals[animal_counter]) animal_counter--;
   }    
   }
   k=0;
    for (i=0;i<animals;i++){
        fprintf (randomgame,"%c ",animals[i]);
        int single_animal = random(1,side*side/5);
        fprintf (randomgame,"%d ",single_animal);
        for (j=0;j<single_animal;j++){
      do{
      x=random(0,side);
      y=random(0,side);
      findway(x,y,hx,hy,f);
      }while(isFree(x,y)==0&&hy!=0&&hy!=0); 
            fprintf (randomgame,"(%d,%d)",x,y);
            Rworld[x][y]=ALPH[k];
        }
        fprintf (randomgame,"\n");
        k++;
    }
    fprintf (randomgame,"===\n");
    fprintf (randomgame,"%c\n", animals[user_animal_number]);
    fprintf (randomgame,"===\n");
    for (i=0;i<animals;i++){
        fprintf (randomgame,"%c ",animals[i]);
        fprintf (randomgame,"%d ",random());//baze?
        fprintf (randomgame,"%d$%d$%d$%d$%d\n",random(20,200),random(1,3),random(60,600),random(20,500),random(20,500));//baze??
    }
    fclose (randomgame);

}
